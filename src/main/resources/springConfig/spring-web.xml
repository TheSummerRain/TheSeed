<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"><!-- 这里注意版本，3.0有很多不能用的 -->

    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持-->
    <mvc:annotation-driven />

    <!-- 2、配置静态资源，不要被拦截器拦截了。有两种办法，这是默认的办法-->
    <mvc:default-servlet-handler/>
    <!-- 2.1、第二种配置静态资源的办法 ，防止被拦截才配置这里。-->
    <!--   <mvc:resources mapping="/js/**" location="/static_resources/javascript/"/>
       <mvc:resources mapping="/styles/**" location="/static_resources/css/"/>
       <mvc:resources mapping="/images/**" location="/static_resources/images/"/>
   -->


    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 4.扫描web相关的bean -->
    <context:component-scan base-package="com.seed.controller"/>

    <!-- 5、拦截器配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截的内容。这里为了方便，拦截所有请求-->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/js/**"/>  <!-- 3.0.xsd是没有这个功的，必须3.0以上-->
            <mvc:exclude-mapping path="/img/**"/>
            <mvc:exclude-mapping path="/plugjsp/**"/>
            <!--拦截器的java类地址-->
            <bean class="com.seed.intercepter.Authorization"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <!-- <bean id="multipartResolver"
           class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         &lt;!&ndash; 默认编码 &ndash;&gt;
         <property name="defaultEncoding" value="utf-8" />
         &lt;!&ndash; 文件大小最大值 &ndash;&gt;
         <property name="maxUploadSize" value="10485760000" />
         &lt;!&ndash; 内存中的最大值 &ndash;&gt;
         <property name="maxInMemorySize" value="40960" />
     </bean>-->


    <!-- 避免IE在ajax请求时，返回json出现下载 -->
    <!--  <bean id="mappingJacksonHttpMessageConverter"
            class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
          <property name="supportedMediaTypes">
              <list>
                  <value>text/html;charset=UTF-8</value>
              </list>
          </property>
      </bean>-->


</beans>